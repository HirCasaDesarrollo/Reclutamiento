// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prueba_BackEnd_Jr.DAL;

#nullable disable

namespace Prueba_BackEnd_Jr.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20221221195936_InitDB")]
    partial class InitDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Prueba_BackEnd_Jr.Models.Ajuste", b =>
                {
                    b.Property<int>("AjusteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AjusteID"), 1L, 1);

                    b.Property<decimal?>("Adeudo")
                        .HasPrecision(28, 2)
                        .HasColumnType("decimal(28,2)");

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<decimal?>("MontoTotal")
                        .HasPrecision(28, 2)
                        .HasColumnType("decimal(28,2)");

                    b.HasKey("AjusteID");

                    b.HasIndex("ClienteID");

                    b.ToTable("Ajustes");
                });

            modelBuilder.Entity("Prueba_BackEnd_Jr.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteID"), 1L, 1);

                    b.Property<string>("Aprobacion")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Estatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontoSolicitado")
                        .HasPrecision(28, 2)
                        .HasColumnType("decimal(28,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ClienteID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Prueba_BackEnd_Jr.Models.Pago", b =>
                {
                    b.Property<int>("PagoID")
                        .HasColumnType("int");

                    b.Property<bool>("Aplicado")
                        .HasColumnType("bit");

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontoPagado")
                        .HasPrecision(28, 2)
                        .HasColumnType("decimal(28,2)");

                    b.HasKey("PagoID");

                    b.HasIndex("ClienteID");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Prueba_BackEnd_Jr.Models.Ajuste", b =>
                {
                    b.HasOne("Prueba_BackEnd_Jr.Models.Cliente", "Cliente")
                        .WithMany("Ajustes")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Prueba_BackEnd_Jr.Models.Pago", b =>
                {
                    b.HasOne("Prueba_BackEnd_Jr.Models.Cliente", "Cliente")
                        .WithMany("Pagos")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Prueba_BackEnd_Jr.Models.Cliente", b =>
                {
                    b.Navigation("Ajustes");

                    b.Navigation("Pagos");
                });
#pragma warning restore 612, 618
        }
    }
}
